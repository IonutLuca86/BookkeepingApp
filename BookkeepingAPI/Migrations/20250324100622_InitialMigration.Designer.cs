// <auto-generated />
using BookkeepingAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookkeepingAPI.Migrations
{
    [DbContext(typeof(BookkeepingContext))]
    [Migration("20250324100622_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookkeepingAPI.Models.Expenses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Ammount")
                        .HasColumnType("float");

                    b.Property<int>("expenseTypeId")
                        .HasColumnType("int");

                    b.Property<int>("monthId")
                        .HasColumnType("int");

                    b.Property<int>("yearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("expenseTypeId");

                    b.HasIndex("monthId");

                    b.HasIndex("yearId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("BookkeepingAPI.Models.ExpensesTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ExpenseType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExpensesTypes");
                });

            modelBuilder.Entity("BookkeepingAPI.Models.IncomeTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IncomeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncomeTypes");
                });

            modelBuilder.Entity("BookkeepingAPI.Models.Incomes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("incomeTypeId")
                        .HasColumnType("int");

                    b.Property<int>("monthId")
                        .HasColumnType("int");

                    b.Property<int>("yearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("incomeTypeId");

                    b.HasIndex("monthId");

                    b.HasIndex("yearId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("BookkeepingAPI.Models.Months", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Months");
                });

            modelBuilder.Entity("BookkeepingAPI.Models.Years", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Years");
                });

            modelBuilder.Entity("BookkeepingAPI.Models.Expenses", b =>
                {
                    b.HasOne("BookkeepingAPI.Models.ExpensesTypes", "ExpenseType")
                        .WithMany()
                        .HasForeignKey("expenseTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BookkeepingAPI.Models.Months", "Month")
                        .WithMany()
                        .HasForeignKey("monthId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BookkeepingAPI.Models.Years", "Year")
                        .WithMany()
                        .HasForeignKey("yearId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ExpenseType");

                    b.Navigation("Month");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("BookkeepingAPI.Models.Incomes", b =>
                {
                    b.HasOne("BookkeepingAPI.Models.IncomeTypes", "IncomeType")
                        .WithMany()
                        .HasForeignKey("incomeTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BookkeepingAPI.Models.Months", "Month")
                        .WithMany()
                        .HasForeignKey("monthId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BookkeepingAPI.Models.Years", "Year")
                        .WithMany()
                        .HasForeignKey("yearId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IncomeType");

                    b.Navigation("Month");

                    b.Navigation("Year");
                });
#pragma warning restore 612, 618
        }
    }
}
