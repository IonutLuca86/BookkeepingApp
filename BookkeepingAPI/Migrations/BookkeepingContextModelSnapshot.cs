// <auto-generated />
using BookkeepingAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookkeepingAPI.Migrations
{
    [DbContext(typeof(BookkeepingContext))]
    partial class BookkeepingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookkeepingAPI.Models.Expenses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("expenseTypeId")
                        .HasColumnType("int");

                    b.Property<int>("monthId")
                        .HasColumnType("int");

                    b.Property<int>("yearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("expenseTypeId");

                    b.HasIndex("monthId");

                    b.HasIndex("yearId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("BookkeepingAPI.Models.ExpensesTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ExpenseType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExpensesTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpenseType = "Rent"
                        },
                        new
                        {
                            Id = 2,
                            ExpenseType = "Utilities"
                        },
                        new
                        {
                            Id = 3,
                            ExpenseType = "Groceries"
                        },
                        new
                        {
                            Id = 4,
                            ExpenseType = "Other"
                        });
                });

            modelBuilder.Entity("BookkeepingAPI.Models.IncomeTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IncomeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncomeTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IncomeType = "Salary"
                        },
                        new
                        {
                            Id = 2,
                            IncomeType = "Bonus"
                        },
                        new
                        {
                            Id = 3,
                            IncomeType = "Other"
                        });
                });

            modelBuilder.Entity("BookkeepingAPI.Models.Incomes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("incomeTypeId")
                        .HasColumnType("int");

                    b.Property<int>("monthId")
                        .HasColumnType("int");

                    b.Property<int>("yearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("incomeTypeId");

                    b.HasIndex("monthId");

                    b.HasIndex("yearId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("BookkeepingAPI.Models.Months", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Months");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Month = "January"
                        },
                        new
                        {
                            Id = 2,
                            Month = "February"
                        },
                        new
                        {
                            Id = 3,
                            Month = "March"
                        },
                        new
                        {
                            Id = 4,
                            Month = "April"
                        },
                        new
                        {
                            Id = 5,
                            Month = "May"
                        },
                        new
                        {
                            Id = 6,
                            Month = "June"
                        },
                        new
                        {
                            Id = 7,
                            Month = "July"
                        },
                        new
                        {
                            Id = 8,
                            Month = "August"
                        },
                        new
                        {
                            Id = 9,
                            Month = "September"
                        },
                        new
                        {
                            Id = 10,
                            Month = "October"
                        },
                        new
                        {
                            Id = 11,
                            Month = "November"
                        },
                        new
                        {
                            Id = 12,
                            Month = "December"
                        });
                });

            modelBuilder.Entity("BookkeepingAPI.Models.Years", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Years");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Year = 2021
                        },
                        new
                        {
                            Id = 2,
                            Year = 2022
                        },
                        new
                        {
                            Id = 3,
                            Year = 2023
                        });
                });

            modelBuilder.Entity("BookkeepingAPI.Models.Expenses", b =>
                {
                    b.HasOne("BookkeepingAPI.Models.ExpensesTypes", "ExpenseType")
                        .WithMany()
                        .HasForeignKey("expenseTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BookkeepingAPI.Models.Months", "Month")
                        .WithMany()
                        .HasForeignKey("monthId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BookkeepingAPI.Models.Years", "Year")
                        .WithMany()
                        .HasForeignKey("yearId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ExpenseType");

                    b.Navigation("Month");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("BookkeepingAPI.Models.Incomes", b =>
                {
                    b.HasOne("BookkeepingAPI.Models.IncomeTypes", "IncomeType")
                        .WithMany()
                        .HasForeignKey("incomeTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BookkeepingAPI.Models.Months", "Month")
                        .WithMany()
                        .HasForeignKey("monthId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BookkeepingAPI.Models.Years", "Year")
                        .WithMany()
                        .HasForeignKey("yearId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IncomeType");

                    b.Navigation("Month");

                    b.Navigation("Year");
                });
#pragma warning restore 612, 618
        }
    }
}
